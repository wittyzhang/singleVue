//------------------
// mixin
//------------------
@import "prefixer";

//清除浮动
@mixin clearfix($legacy-support-for-ie: true) {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,&:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}
%clearfix {
    @include clearfix;
}

//透明度
//@param  {[float]} $opacity      		 	[opacity] 0-1的小数
//@param  {[boolean]} $support-for-ie       [true] 支持IE8-,[false] 不支持IE8-
@mixin opacity($opacity:.65, $support-for-ie:true) {
	opacity: $opacity;
	@if $support-for-ie{
		$opacity-ie: $opacity * 100;
		filter: alpha(opacity=$opacity-ie); //IE8
	}
}


//背景半透明
//@param  {#HEX  } $color               		十六进制的色值，如：#aabbcc
//@param  {number} $opacity             		0-1的小数
//@param  {boolean} $support-for-ie:true 		如果为真，支持ie
@mixin rgba($color, $opacity, $support-for-ie:true){
	background-color:rgba($color,$opacity);
	@if $support-for-ie{
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($color,$opacity))},endColorstr=#{ie-hex-str(rgba($color,$opacity))});
		:root & {
			filter: none;
		}
	}
}

//[center 居中]
//@param  {[number]} $width  		[居中元素的宽度]
//@param  {[number]} $height		[居中元素的高度]
@mixin center($width: null, $height: null) {
	position: absolute;
	top: 50%;
	left: 50%;

	@if not $width and not $height {
		@include translate((-50%, -50%));
	} @else if $width and $height {
		width: $width;
		height: $height;
		margin: {
			top: -($width / 2);
			left: -($height / 2 );
		}
	} @else if not $height {
		width: $width;
		margin-left: -($width / 2);
		@include prefixer(transform, translateY(-50%));
	} @else {
		height: $height;
		margin-top: -($height / 2);
		@include prefixer(transform, translateX(-50%));
	}
}


//float 
@mixin float($direction: left,$support-for-ie:false){
	float: unquote($direction);
	@if $support-for-ie{
		_display: inline;
	}
}

//inline-block
@mixin inline-block($alignment: middle, $support-for-ie: false) {
	display: inline-block;
	@if $alignment and $alignment != none {
		vertical-align: $alignment;
	}
	@if $support-for-ie {
//		*vertical-align: auto;
		*display: inline;
		*zoom: 1;
	}
}

//最小宽、高
@mixin minBlock($type, $num){
	@if ($type == width or $type == both ){
		min-width: $num;
		width: auto !important; 
		_width: $num;
	}
	@if ($type == height or $type == both){
		min-height: $num;
		height: auto !important; 
		_height: $num;
	}
}

//input等输入框的默认样式重置
@mixin placeholder($color){
	&::-webkit-input-placeholder { 
		color: $color; 
	} 
	&:-moz-placeholder { 
		color: $color;
	} 
	&::-moz-placeholder { 
		color: $color;
	}
	&:-ms-input-placeholder { 
		color: $color; 
	}
}


//半透明阴影
//@param  {[number]} $zIndex: 1000  [z轴的高度]
@mixin mask($zIndex: 1000){
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: $zIndex;
}


//H5背景图设置
//@param  {[string]} $url       	[图片路径，带引号]
//@param  {[value]}  $size      	[background-size的值，可以带空格]
//@param  {[value]}  $else:null 	[可不填，background的其他值]
@mixin bgSize($url, $size, $else:null){
	@if not $else{
		background: url(unquote($url)); 
	} @else{
		background: url(unquote($url)) $else; 
	}
	@include prefixer(background-size, $size);
}


/**
 * 使用原生滚动 & 隐藏滚动条
 */
@mixin scrollbar() {
	-webkit-overflow-scrolling: touch;
	overflow-x: scroll;
	&::-webkit-scrollbar {
		display: none;
	}
}

//抢光啦 用于图片层上
@mixin soldout($size: 96, $fontsize: 22, $opacity: 0.6) {
	position: absolute;
	top: 50%;
	left: 50%;
	margin: rem(- $size / 2) 0 0 rem(- $size / 2);
	width: rem($size);
	height: rem($size);
	background: rgba(0, 0, 0, $opacity);
	border-radius: 100%;
	color: #fff;
	line-height: rem($size);
	text-align: center;
	&:after {
		content: '抢光啦';
		font-style: normal;
		font-size: rem($fontsize);
	}
}

/**
 * 文字溢出显示点点点
 * @param  {[type]} $line:      1             [控制溢出行数]
 * @param  {[type]} $substract: null          [控制剪切宽度]
 */
 @mixin ellipsis($line: 1, $substract: null) {
    @if $line == 1 {
        white-space: nowrap;
        text-overflow: ellipsis;
    } @else {
        display: -webkit-box;
        display: box;
        -webkit-line-clamp: $line;
        line-clamp: $line;
        -webkit-box-orient: vertical;
        box-orient: vertical;
        @if $substract {
			width: 100% - $substract;
        }
    }
    overflow: hidden;
}

/**
 * 根据宽、高、色值、边框大小 设置一个向右箭头，如：查看更多 >
 * @param  {[type]} $size  		[宽/高]
 * @param  {[type]} $color  	[色值]
 * @param  {[type]} $border  	[色值]
 */
 @mixin sideArrow($size, $color, $border: 1px) {
	position: relative;
	padding-right: rem($size * 2);
	&:after {
		content: '';
		position: absolute;
		top: 50%;
		right: rem(4);
		border-top: $border solid $color;
		border-right: $border solid $color;
		width: rem($size);
		height: rem($size);
		transform: translateY(-50%) rotate(45deg);
	}
}


@mixin linear-gradient($from, $to) {
	background-color: $to;											//Fallback for sad browsers
	background-image:-moz-linear-gradient($from, $to);				//Mozilla Firefox
	background-image:-o-linear-gradient($from, $to);				//Opera
	background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));			//WebKit (Chrome 11+)
	background-image: -webkit-linear-gradient($from, $to);			//WebKit (Safari 5.1+, Chrome 10+)
	background-image: -ms-linear-gradient($from, $to);				//IE10
	background-image: linear-gradient($from, $to);					//W3C
}

// Background Gradient: Top to Bottom
@mixin bg-gradient-t2b($start-colour, $end-colour) {
	background-color: $start-colour;
	background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour));
	background-image: -webkit-linear-gradient(to bottom, $start-colour, $end-colour);
	background-image: -moz-linear-gradient(to bottom, $start-colour, $end-colour);
	background-image: -ms-linear-gradient(to bottom, $start-colour, $end-colour);
	background-image: -o-linear-gradient(to bottom, $start-colour, $end-colour);
	background-image: linear-gradient(to bottom, $start-colour, $end-colour);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($start-colour,1))},endColorstr=#{ie-hex-str(rgba($end-colour,1))});
}

// Background Gradient: Left to Right
@mixin bg-gradient-l2r($start-colour, $end-colour) {
	background-color: $start-colour;
	background-image: -webkit-gradient(linear, left top, right top, from($start-colour), to($end-colour));
	background-image: -webkit-linear-gradient(to right, $start-colour, $end-colour);
	background-image: -moz-linear-gradient(to right, $start-colour, $end-colour);
	background-image: -ms-linear-gradient(to right, $start-colour, $end-colour);
	background-image: -o-linear-gradient(to right, $start-colour, $end-colour);
	background-image: linear-gradient(to right, $start-colour, $end-colour);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($start-colour,1))}, endColorstr=#{ie-hex-str(rgba($end-colour,1))}, gradientType='1');
}

// Background Gradient: Top to Bottom
@mixin bg-gradient-t2b-deg( $start-colour, $end-colour, $deg:135deg) {
	background-color: $start-colour;
	background-image: -webkit-gradient(linear, $deg, from($start-colour), to($end-colour));
	background-image: -webkit-linear-gradient($deg, $start-colour, $end-colour);
	background-image: -moz-linear-gradient($deg, $start-colour, $end-colour);
	background-image: -ms-linear-gradient($deg, $start-colour, $end-colour);
	background-image: -o-linear-gradient($deg, $start-colour, $end-colour);
	background-image: linear-gradient($deg, $start-colour, $end-colour);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($start-colour,1))},endColorstr=#{ie-hex-str(rgba($end-colour,1))});
}

 